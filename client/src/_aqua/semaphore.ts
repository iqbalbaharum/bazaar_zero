/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.7.4-338
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v3';


// Services

export interface ISemaphoreServiceDef {
    add_member: (message: string, callParams: CallParams<'message'>) => { byteSignal: string; fullProof: { proof: { curve: string | null; pi_a: string[] | null; pi_b: string[][] | null; pi_c: string[] | null; protocol: string | null; }; publicSignals: { externalNullifier: string; merkleRoot: string; nullifierHash: string; signalHash: string; }; }; solidityProof: string[]; } | Promise<{ byteSignal: string; fullProof: { proof: { curve: string | null; pi_a: string[] | null; pi_b: string[][] | null; pi_c: string[] | null; protocol: string | null; }; publicSignals: { externalNullifier: string; merkleRoot: string; nullifierHash: string; signalHash: string; }; }; solidityProof: string[]; }>;
    is_member: (message: string, callParams: CallParams<'message'>) => boolean | Promise<boolean>;
}
export function registerISemaphoreService(serviceId: string, service: ISemaphoreServiceDef): void;
export function registerISemaphoreService(peer: FluencePeer, serviceId: string, service: ISemaphoreServiceDef): void;
       

export function registerISemaphoreService(...args: any) {
    registerService(
        args,
        {
    "functions" : {
        "tag" : "labeledProduct",
        "fields" : {
            "add_member" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "message" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "struct",
                            "name" : "AddMember",
                            "fields" : {
                                "byteSignal" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                },
                                "fullProof" : {
                                    "tag" : "struct",
                                    "name" : "FullProof",
                                    "fields" : {
                                        "proof" : {
                                            "tag" : "struct",
                                            "name" : "Proof",
                                            "fields" : {
                                                "curve" : {
                                                    "tag" : "option",
                                                    "type" : {
                                                        "tag" : "scalar",
                                                        "name" : "string"
                                                    }
                                                },
                                                "pi_a" : {
                                                    "tag" : "option",
                                                    "type" : {
                                                        "tag" : "array",
                                                        "type" : {
                                                            "tag" : "scalar",
                                                            "name" : "string"
                                                        }
                                                    }
                                                },
                                                "pi_c" : {
                                                    "tag" : "option",
                                                    "type" : {
                                                        "tag" : "array",
                                                        "type" : {
                                                            "tag" : "scalar",
                                                            "name" : "string"
                                                        }
                                                    }
                                                },
                                                "pi_b" : {
                                                    "tag" : "option",
                                                    "type" : {
                                                        "tag" : "array",
                                                        "type" : {
                                                            "tag" : "array",
                                                            "type" : {
                                                                "tag" : "scalar",
                                                                "name" : "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "protocol" : {
                                                    "tag" : "option",
                                                    "type" : {
                                                        "tag" : "scalar",
                                                        "name" : "string"
                                                    }
                                                }
                                            }
                                        },
                                        "publicSignals" : {
                                            "tag" : "struct",
                                            "name" : "PublicSignals",
                                            "fields" : {
                                                "externalNullifier" : {
                                                    "tag" : "scalar",
                                                    "name" : "string"
                                                },
                                                "merkleRoot" : {
                                                    "tag" : "scalar",
                                                    "name" : "string"
                                                },
                                                "nullifierHash" : {
                                                    "tag" : "scalar",
                                                    "name" : "string"
                                                },
                                                "signalHash" : {
                                                    "tag" : "scalar",
                                                    "name" : "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "solidityProof" : {
                                    "tag" : "array",
                                    "type" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            "is_member" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "message" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "scalar",
                            "name" : "bool"
                        }
                    ]
                }
            }
        }
    }
}
    );
}
      
// Functions

